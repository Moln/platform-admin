<div id="model-manager-model-<?=$id?>"></div>

<script>
    $(function () {
        var config = <?=json_encode($config)?>;
        var fieldsConfig = {}, columnsConfig = [];

        $.each(config.column_alias, function (name, alias) {
            var column = alias || name;
            fieldsConfig[column] = {type: config.ui_type[column]};
        });

        $.each(config.ui_title, function (column, title) {
            var title = title || column,
                columnConfig = {field: column, title: title};
            if (config.ui_hidden[column]) {
                columnConfig.hidden = config.ui_hidden[column];
            }
            if (config.ui_template[column]) {
                columnConfig.template = config.ui_template[column];
            }
            if (config.ui_width[column]) {
                columnConfig.width = config.ui_width[column];
            }
            columnConfig.sortable = config.ui_sortable && config.ui_sortable[column];
            columnConfig.filterable = config.ui_filterable && config.ui_filterable[column];

            columnsConfig.push(columnConfig);
        });

        if (config.detail_enable) {
            columnsConfig.detailTemplate = config.detail_template;
        }

        var $grid = $('#model-manager-model-<?=$id?>'),
            serviceUrl = "./admin/user/",
            dataSource = new kendo.data.DataSource({
                transport: {
                    read: serviceUrl + "read",
                    update: serviceUrl + "save",
                    destroy: serviceUrl + "delete",
                    create: serviceUrl + "save"
                },
                schema: {
                    model: {
                        fields: fieldsConfig
                    },
                    "data": "data",
                    "total": "total"
                },
                error: function (e) {
                    if (e.status == "customerror") {
                        for (var i in e.errors) {
                            for (var j in e.errors[i]) {
                                alert(e.errors[i][j]);
                                break;
                            }
                            break;
                        }
                    }
                },
                pageSize: 15,
                serverFiltering: true,
                serverPaging: true,
                serverSorting: true
            });


        $grid.kendoGrid({
            dataSource: dataSource,
            pageable: true,
//            toolbar: [
//                {'name': 'create', 'text': '增加'},
//                {
//                    name: "用户角色分配",
//                    click: function (e) {
//                        var tr = $(e.target).closest("tr");
//                        var data = this.dataItem(tr);
//                        Platform.ui.newWindow({
//                            title: data.account + '::用户角色分配::用户管理',
//                            content: './admin/user/assign/id/' + data.user_id
//                        });
//                    }
//                }
//            ],
            filterable: {
                extra: false,
                messages: {
                    info: "查找: ",
                    filter: "提交",
                    clear: "清除",
                    selectValue: "------选择------",
                    and: "并且",
                    or: "或者"
                },
                operators: {
                    string: {
                        eq: "等于",
                        contains: "模糊查找"
                    },
                    number: {
                        eq: "等于"
                    },
                    date: {
                        ge: "大于等于",
                        le: "小于",
                        gt: "大于",
                        lt: "小于"
                    },
                    enums: {
                        eq: "满足条件"
                    }
                }
            },
            columns: columnsConfig,
            selectable: true,
//            editable: "popup",
            sortable: true

//            cancel: function (e) { console.log('cancel', arguments); },
//            change: function (e) { console.log('change', arguments); },
//            columnHide: function (e) { console.log('columnHide', arguments); },
//            columnMenuInit: function (e) { console.log('columnMenuInit', arguments); },
//            columnReorder: function (e) { console.log('columnReorder', arguments); },
//            columnResize: function (e) { console.log('columnResize', arguments); },
//            columnShow: function (e) { console.log('columnShow', arguments); },
//            dataBinding: function (e) { console.log('dataBinding', arguments); },
//            dataBound: function (e) { console.log('dataBound', arguments); },
//            detailCollapse: function (e) { console.log('detailCollapse', arguments); },
//            detailExpand: function (e) { console.log('detailExpand', arguments); },
//            detailInit: function (e) { console.log('detailInit', arguments); },
//            edit: function (e) { console.log('edit', arguments); },
//            filterMenuInit: function (e) { console.log('filterMenuInit', arguments); },
//            remove: function (e) { console.log('remove', arguments); },
//            save: function (e) { console.log('save', arguments); },
//            saveChanges: function (e) { console.log('saveChanges', arguments); },
        });
    });
</script>